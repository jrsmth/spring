/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.32).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ModelAndView;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2023-08-12T06:05:54.271Z")

@Validated
@Api(value = "error", description = "the error API")
@RequestMapping(value = "")
public interface ErrorApi {

    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingDELETE", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<ModelAndView> errorHtmlUsingDELETE();


    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingGET", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<ModelAndView> errorHtmlUsingGET();


    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingHEAD", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.HEAD)
    ResponseEntity<ModelAndView> errorHtmlUsingHEAD();


    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingOPTIONS", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.OPTIONS)
    ResponseEntity<ModelAndView> errorHtmlUsingOPTIONS();


    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingPATCH", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<ModelAndView> errorHtmlUsingPATCH();


    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingPOST", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ModelAndView> errorHtmlUsingPOST();


    @ApiOperation(value = "errorHtml", nickname = "errorHtmlUsingPUT", notes = "", response = ModelAndView.class, tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ModelAndView.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/error",
        produces = { "text/html" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<ModelAndView> errorHtmlUsingPUT();

}
